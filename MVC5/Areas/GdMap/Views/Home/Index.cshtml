
@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/GdMap/Views/Shared/_Layout.cshtml";
}
<link rel="stylesheet" href="http://cache.amap.com/lbs/static/main1119.css" />
<link rel="stylesheet" href="http://cache.amap.com/lbs/static/AMap.PlaceSearchRender1120.css" />
<link rel="stylesheet" href="http://cache.amap.com/lbs/static/main1119.css" />
<script src="http://cache.amap.com/lbs/static/es5.min.js"></script>
<script src="http://webapi.amap.com/maps?v=1.3&key=92bb167580c47b1c656e711975e8bd75&plugin=AMap.PlaceSearch,AMap.AdvancedInfoWindow"></script>
<script type="text/javascript" src="http://cache.amap.com/lbs/static/addToolbar.js"></script>
<script type="text/javascript" src="http://cache.amap.com/lbs/static/PlaceSearchRender.js"></script>
<link href="~/Content/style/GdMap/Site.css" rel="stylesheet" />


<div id="container"></div>

<div class="button-group">
    <input id="cityName" class="inputtext" placeholder="请输入城市的名称" type="text" />
    <input id="query" class="button" value="到指定的城市" type="button" />
</div>

<div id="myPageTop">
    <table>
        <tr>
            <td colspan="2">
                <label>请输入关键字：</label><input id="tipinput" class="inputtext" /><input id="tipSearch" class="button" value="查询" type="button" />
            </td>
        </tr>
        <tr>
            <td>
                <label>幼儿园</label><input type="checkbox" id="Kind"  />
            </td>
            <td>
                <label>医院</label><input type="checkbox" id="Hostp"  />
            </td>
        </tr>
    </table>
</div>

<script>
    var map = new AMap.Map('container', {
        resizeEnable: true,
        isHotspot: true
    });
    var currCity,
        temArr = { Kind: [], Hostp: [] },
        graphObj = { R: "1000", COLOR: "#F33" };
 
    var GetPix = function (x, y) {
        return { X: x, Y: y };
    }

    $(function () {
        //设置城市
        $("#query").click(function () {
            var cityName = $("#cityName").val();
            SearchExt.SearchCity(cityName);
        })

        //模糊查询
        $("#tipSearch").click(function () {
            var searchStr = $("#tipinput").val();
            SearchExt.MHSearch(searchStr);
        })

        //基础信息查询
        $("#Kind").click(function () {
            if ($(this).get(0).checked) {
                graphObj.COLOR = "red";
                SearchExt.MHSearch('幼儿园');
            }
            else {
                GraphExt.ClearCircle(temArr.Kind);
            }

        })
        $("#Hostp").click(function () {
            if ($(this).get(0).checked) {
                graphObj.COLOR = "black";
                SearchExt.MHSearch('医院');
            }
            else {
                GraphExt.ClearCircle(temArr.Hostp);
            }

        })

    })



    var SearchExt = {     
        //城市查询
        SearchCity: function (cityName)
    {
                if (!cityName) {
                    cityName = '长沙市';
                }
                map.setCity(cityName);
            });
            var placeSearch = new AMap.PlaceSearch();  //构造地点查询类
            var infoWindow = new AMap.AdvancedInfoWindow({});
            map.on('hotspotclick', function (result) {
                placeSearch.getDetails(result.id, function (status, result) {
                    if (status === 'complete' && result.info === 'OK') {
                        placeSearch_CallBack(result);
                    }
                });
            });
            //回调函数
            function placeSearch_CallBack(data) { //infoWindow.open(map, result.lnglat);
                var poiArr = data.poiList.pois;
                var location = poiArr[0].location;
                infoWindow.setContent(createContent(poiArr[0]));
                infoWindow.open(map, location);
            }
            function createContent(poi) {  //信息窗体内容
                var s = [];
                s.push('<div class="info-title">' + poi.name + '</div><div class="info-content">' + "地址：" + poi.address);
                s.push("电话：" + poi.tel);
                s.push("类型：" + poi.type);
                s.push('<div>');
                return s.join("<br>");
            }
        } ,

        //周边查找 
        NearSearch :  function(val)
        {
            var placeSearch = new AMap.PlaceSearch({ //构造地点查询类
                pageSize: 5,
                pageIndex: 1,
                city: "长沙", //城市
                map: map,
                panel: "panel"
            });
            var cpoint = map.center; //中心点坐标
            placeSearch.searchNearBy(val, map.center, 200, function (status, result) {

            });
        },

        //模糊查询
        MHSearch   :  function(value)
        {
            //关键字检索查询
            var placeSearchOptions = { //构造地点查询类
                pageSize: 10,
                pageIndex: 1,
                city: "长沙" ,//城市
                type:"汽车服务|汽车销售|汽车维修|摩托车服务|餐饮服务|购物服务|生活服务|体育休闲服务|医疗保健服务|住宿服务|风景名胜|商务住宅|政府机构及社会团体|科教文化服务|交通设施服务|金融保险服务|公司企业|道路附属设施|地名地址信息|公共设施"
            };
            var placeSearch = new AMap.PlaceSearch(placeSearchOptions);
            //关键字查询，您如果想修改结果展现效果，请参考页面：http://lbs.amap.com/fn/css-style/
            placeSearch.search(value, callback);

            var placeSearchRender = new Lib.AMap.PlaceSearchRender();
            function callback(status, result) {
                var pois = result.poiList.pois;
                for (var i = 0; i < pois.length; i++)
                {
                    var pix = GetPix(pois[i].location.I, pois[i].location.M);
                    temArr.Kind.push(pix);
                    GraphExt.SetCircle(pix);
                }

                if (status === 'complete' && result.info === 'OK') {
                    placeSearchRender.autoRender({
                        placeSearchInstance: placeSearch,
                        methodName: "search",
                        methodArgumments: [value, callback],
                        data: result,
                        map: map,
                        panel: "panel",
                    
                    });
                }
            }
        }
    }

    var GraphExt = {
        //创建样式对象
        GetCirCleObj : function (x, y, color, r) {
            var obj = {};
            obj.X = x;
            obj.Y = y;
            obj.COLOR = color;
            obj.R = r;
            return obj;
        },

        //设置圆形
        SetCircle    :  function(pix)
        {
            var circle = new AMap.Circle({
                center: new AMap.LngLat(pix.X, pix.Y),// 圆心位置
                radius: graphObj.R, //半径
                strokeColor: "#F33", //线颜色
                strokeOpacity: 1, //线透明度
                strokeWeight: 3, //线粗细度
                fillColor: graphObj.COLOR, //填充颜色
                fillOpacity: 0.35//填充透明度
            });
            circle.setMap(map);
        },

        //清除标记
        ClearCircle  : function (data) {
            var circle = new AMap.Circle({
                center: [0,0]
            });
            for (var i = 0; i < data.length; i++)
            {
                circle.center = data[i];
                circle.setMap(null);
            }

        },

        GetMark      : function () { }
    }
</script>
