//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC5.EmployeesService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/ServerSoft")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DepartmentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GradeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Department {
            get {
                return this.DepartmentField;
            }
            set {
                if ((object.ReferenceEquals(this.DepartmentField, value) != true)) {
                    this.DepartmentField = value;
                    this.RaisePropertyChanged("Department");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Grade {
            get {
                return this.GradeField;
            }
            set {
                if ((object.ReferenceEquals(this.GradeField, value) != true)) {
                    this.GradeField = value;
                    this.RaisePropertyChanged("Grade");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EmployeesService.IEmployees")]
    public interface IEmployees {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/GetAll", ReplyAction="http://tempuri.org/IEmployees/GetAllResponse")]
        MVC5.EmployeesService.Employee[] GetAll();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/GetAll", ReplyAction="http://tempuri.org/IEmployees/GetAllResponse")]
        System.Threading.Tasks.Task<MVC5.EmployeesService.Employee[]> GetAllAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Get", ReplyAction="http://tempuri.org/IEmployees/GetResponse")]
        MVC5.EmployeesService.Employee Get(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Get", ReplyAction="http://tempuri.org/IEmployees/GetResponse")]
        System.Threading.Tasks.Task<MVC5.EmployeesService.Employee> GetAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Create", ReplyAction="http://tempuri.org/IEmployees/CreateResponse")]
        void Create(MVC5.EmployeesService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Create", ReplyAction="http://tempuri.org/IEmployees/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(MVC5.EmployeesService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Update", ReplyAction="http://tempuri.org/IEmployees/UpdateResponse")]
        void Update(MVC5.EmployeesService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Update", ReplyAction="http://tempuri.org/IEmployees/UpdateResponse")]
        System.Threading.Tasks.Task UpdateAsync(MVC5.EmployeesService.Employee employee);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Delete", ReplyAction="http://tempuri.org/IEmployees/DeleteResponse")]
        void Delete(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployees/Delete", ReplyAction="http://tempuri.org/IEmployees/DeleteResponse")]
        System.Threading.Tasks.Task DeleteAsync(string id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeesChannel : MVC5.EmployeesService.IEmployees, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeesClient : System.ServiceModel.ClientBase<MVC5.EmployeesService.IEmployees>, MVC5.EmployeesService.IEmployees {
        
        public EmployeesClient() {
        }
        
        public EmployeesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public MVC5.EmployeesService.Employee[] GetAll() {
            return base.Channel.GetAll();
        }
        
        public System.Threading.Tasks.Task<MVC5.EmployeesService.Employee[]> GetAllAsync() {
            return base.Channel.GetAllAsync();
        }
        
        public MVC5.EmployeesService.Employee Get(string id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<MVC5.EmployeesService.Employee> GetAsync(string id) {
            return base.Channel.GetAsync(id);
        }
        
        public void Create(MVC5.EmployeesService.Employee employee) {
            base.Channel.Create(employee);
        }
        
        public System.Threading.Tasks.Task CreateAsync(MVC5.EmployeesService.Employee employee) {
            return base.Channel.CreateAsync(employee);
        }
        
        public void Update(MVC5.EmployeesService.Employee employee) {
            base.Channel.Update(employee);
        }
        
        public System.Threading.Tasks.Task UpdateAsync(MVC5.EmployeesService.Employee employee) {
            return base.Channel.UpdateAsync(employee);
        }
        
        public void Delete(string id) {
            base.Channel.Delete(id);
        }
        
        public System.Threading.Tasks.Task DeleteAsync(string id) {
            return base.Channel.DeleteAsync(id);
        }
    }
}
